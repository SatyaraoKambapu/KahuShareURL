/*
 * This file was generated by the Gradle 'init' task.
 */

plugins {
    id 'java'
    id 'maven-publish'
    id 'com.google.cloud.tools.jib' version '2.4.0'
    id 'org.springframework.boot' version '2.2.7.RELEASE'
}

apply plugin: "com.google.cloud.tools.jib"
apply plugin: 'io.spring.dependency-management'

repositories {
    mavenLocal()
    maven {
        url = 'https://repo.maven.apache.org/maven2'
    }
}

dependencies {
    compile 'org.springframework.boot:spring-boot-starter-web:2.2.7.RELEASE'
    compile 'org.springframework.boot:spring-boot-starter-security:2.2.7.RELEASE'
    compile 'javax.servlet:jstl:1.2'
    compile 'org.webjars:bootstrap:3.3.6'
    compile 'org.webjars:bootstrap-datepicker:1.0.1'
    compile 'org.webjars:jquery:1.9.1'
    compile 'org.json:json:20200518'
    runtime 'org.springframework.boot:spring-boot-devtools:2.2.7.RELEASE'
    testCompile 'org.springframework.boot:spring-boot-starter-test:2.2.7.RELEASE'
    compileOnly 'org.apache.tomcat.embed:tomcat-embed-jasper:9.0.34'
}

group = 'com.spireon.hackthon.kahuweb'
version = '0.0.1-SNAPSHOT'
description = 'spring-boot-first-web-application'
sourceCompatibility = '1.8'

publishing {
    publications {
        maven(MavenPublication) {
            from(components.java)
        }
    }
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

    
def gitHash = { ->
    def stdout = new ByteArrayOutputStream()
    exec {
        commandLine 'git', 'rev-parse', '--short', 'HEAD'
        standardOutput = stdout
    }
    return stdout.toString().trim()
}

def gitBranch = { ->
    def stdout = new ByteArrayOutputStream()
    exec {
        commandLine 'git', 'rev-parse', '--abbrev-ref', 'HEAD'
        standardOutput = stdout
    }
    return stdout.toString().replaceAll("/", "-").trim()
}

if (gitBranch() != 'master') {
    def version = gitBranch() + '-' + gitHash()
    def pos = version.lastIndexOf('/')
    if (pos >= 0) {
        version = version.substring(pos + 1)
    }
    project.version = version + '-SNAPSHOT'
    println "gitbranch() reports version as: " + project.version
}

springBoot {
    buildInfo()
}

jib {
    from {
        image = 'spireon/spireonapp-java11:latest'
        auth {
            username = DOCKER_USERNAME
            password = DOCKER_PASSWORD
        }
    }

    to {
        image = "registry.hub.docker.com/spireon/${project.name.toLowerCase()}"
        auth {
            username = DOCKER_USERNAME
            password = DOCKER_PASSWORD
        }
        tags = [project.version, gitBranch() + gitHash()]
    }

    container {
        entrypoint = 'INHERIT'
        ports = ['8080']
        format = 'DOCKER'
    }
    
    extraDirectories {
        paths = [
                'build/jib',
                'docker'
        ]

    }
}



